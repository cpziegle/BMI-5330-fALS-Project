from difflib import SequenceMatcher
import gzip

seq_file = gzip.open(r"file_with_seq_data", 'rt')

sequence = []
c9orf72 = ""

#read sequence within file into string
for line in seq_file:
    sequence.append(line.strip())
print("sequence has been read")
for item in sequence:
    c9orf72 += item

print(c9orf72)
c9orf72 = c9orf72[27544543:]

#define leading and flanking sequences
begin_seq = "CGCCCCCGGGCCCGCCCCGACCACGCCCC"
end_seq = "TAGCGCGCGACTCCTGAGTTCCAGAGCTT"
start_spot = 0
end_spot = 0

#find sequence that identifies beginning of VNTR section
for nuc_string in range (0, len(c9orf72) + 1):
    seq = SequenceMatcher(None, begin_seq, str(c9orf72[nuc_string: nuc_string + len(begin_seq) - 1]))
    if seq.ratio() >= .75:
        start_spot = nuc_string + len(begin_seq)
    else:
        start_spot = 0

#find sequence that identifies end of VNTR section
for nuc_string in range (0, len(c9orf72) + 1):
    seq = SequenceMatcher(None, end_seq, str(c9orf72[nuc_string: nuc_string + len(end_seq) - 1]))
    if seq.ratio() >= .75:
        end_spot = nuc_string

#estimate number of VNTRs by dividing by expected length of VNTR
number_repeats = round((end_spot - start_spot)/6)
print("number of repeats is: " + str(number_repeats))

#classify number of repeats as increased risk or non-increased risk
if number_repeats < 30:
    print("No indication of increased risk for fALS based on c9orf72 hexanucleotide expansion.")
elif number_repeats >= 30:
    print("Potential indication of increased risk for fALS based on c9orf72 hexanucleotide expansion.")

seq_file.close()

